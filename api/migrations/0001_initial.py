# Generated by Django 4.2 on 2023-12-03 01:47

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Buyer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='DevColorShade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('color_shade', models.CharField(max_length=100)),
                ('buyer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.buyer')),
            ],
        ),
        migrations.CreateModel(
            name='DevFormat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('format_path', models.URLField(blank=True, null=True)),
                ('format_label', models.CharField(max_length=100)),
                ('buyer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.buyer')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.CharField(choices=[('manager', 'Manager'), ('incharge', 'Incharge'), ('coordinator', 'Coordinator'), ('technician', 'Technician')], max_length=20)),
                ('groups', models.ManyToManyField(related_name='custom_user_set', to='auth.group')),
                ('user_permissions', models.ManyToManyField(related_name='custom_user_set', to='auth.permission')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='DevRequirement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dry_rubbing', models.CharField(blank=True, max_length=100, null=True)),
                ('wet_rubbing', models.CharField(blank=True, max_length=100, null=True)),
                ('wash_tear_warp', models.CharField(blank=True, max_length=5, null=True)),
                ('wash_tear_weft', models.CharField(blank=True, max_length=5, null=True)),
                ('tensile_warp', models.CharField(blank=True, max_length=5, null=True)),
                ('tensile_weft', models.CharField(blank=True, max_length=5, null=True)),
                ('buyer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.buyer')),
                ('color_shade', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.devcolorshade')),
                ('format', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.devformat')),
            ],
        ),
        migrations.CreateModel(
            name='DevReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('style', models.CharField(max_length=100)),
                ('color', models.CharField(blank=True, max_length=20, null=True)),
                ('fab_ref', models.CharField(max_length=20)),
                ('fab_supplier', models.CharField(blank=True, max_length=50, null=True)),
                ('sample_type', models.CharField(max_length=20)),
                ('receive_date', models.DateField()),
                ('report_date', models.DateField()),
                ('create_date', models.DateField(default=django.utils.timezone.now)),
                ('dry_rubbing', models.CharField(blank=True, max_length=5, null=True)),
                ('wet_rubbing', models.CharField(blank=True, max_length=5, null=True)),
                ('rubbing_comment', models.CharField(default='N/A', max_length=20)),
                ('raw_tear_warp', models.CharField(blank=True, max_length=20, null=True)),
                ('raw_tear_weft', models.CharField(blank=True, max_length=20, null=True)),
                ('wash_tear_warp', models.CharField(blank=True, max_length=20, null=True)),
                ('wash_tear_weft', models.CharField(blank=True, max_length=20, null=True)),
                ('tear_comment', models.CharField(default='N/A', max_length=20)),
                ('tensile_warp', models.CharField(blank=True, max_length=20, null=True)),
                ('tensile_weft', models.CharField(blank=True, max_length=20, null=True)),
                ('tensile_comment', models.CharField(default='N/A', max_length=20)),
                ('result', models.CharField(max_length=20)),
                ('buyer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.buyer')),
                ('color_shade', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.devcolorshade')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.user')),
                ('format', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.devformat')),
            ],
        ),
    ]
